#ifndef IBaseInterface_h__
#define IBaseInterface_h__

class IBaseInterface
{
public:
	///////////////////////////////////////////////////////////////////////////////////////////
	// Function: “Destructor”
	//
	// Purpose: Virtual destructor so it can be inherited from
	//////////////////////////////////////////////////////////////////////////////////////////	
	virtual ~IBaseInterface() = 0 {}

	///////////////////////////////////////////////////////////////////////////////////////////
	// Function: “Update”
	//
	// Purpose: Perform all the update logic
	//////////////////////////////////////////////////////////////////////////////////////////	
	virtual void Update(float dt) = 0;

	///////////////////////////////////////////////////////////////////////////////////////////
	// Function: “Render”
	//
	// Purpose: Draw the object
	//////////////////////////////////////////////////////////////////////////////////////////	
	virtual void Render() = 0;

	///////////////////////////////////////////////////////////////////////////////////////////
	// Function: “AddRef”
	//
	// Purpose: Provide reference counting
	//////////////////////////////////////////////////////////////////////////////////////////	
	virtual void AddRef(void) = 0;

	///////////////////////////////////////////////////////////////////////////////////////////
	// Function: “Release”
	//
	// Purpose: Remove a reference and clean up if no references
	//////////////////////////////////////////////////////////////////////////////////////////	
	virtual void Release(void) = 0;
};

#endif // IBaseInterface_h__